<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cristianounix</title>
  <id>http://cristianounix.github.io</id>
  <link href="http://cristianounix.github.io" />
  <link href="http://cristianounix.github.io/atom.xml" rel="self" />
  <updated>2014-07-26T15:26:49-03:00</updated>
  <rights>Copyright 2014, Cristiano S. Oliveira</rights>
  <author>
    <name>Cristiano S. Oliveira</name>
  </author>
  
    <entry>
      <title>Configuring Capistrano</title>
      <link href="http://cristianounix.github.io/ruby,%20deploy,%20capistrano/2014/07/22/configuring-capistrano/" />
      <summary type="html">&lt;h2 id=&quot;ridiculous-simple-lets-go&quot;&gt;Ridiculous simple, let´s go:&lt;/h2&gt;

&lt;p&gt;put gem ‘capistrano’ in your Gemfile&lt;/p&gt;

&lt;p&gt;$ bundle install&lt;/p&gt;

&lt;p&gt;Capify your application&lt;/p&gt;

&lt;p&gt;$ bundle exec cap install&lt;/p&gt;

&lt;p&gt;Check this files:&lt;/p&gt;

&lt;p&gt;├── Capfile&lt;br /&gt;
  ├── config&lt;br /&gt;
  │   ├── deploy&lt;br /&gt;
  │   │   ├── production.rb&lt;br /&gt;
  │   │   └── staging.rb&lt;br /&gt;
  │   └── deploy.rb&lt;br /&gt;
  └── lib&lt;br /&gt;
  &lt;strong&gt;___ └── capistrano&lt;br /&gt;
  __&lt;/strong&gt;&lt;strong&gt;__&lt;/strong&gt;&lt;em&gt;__&lt;/em&gt; └── tasks&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;For create different stages&lt;/p&gt;

&lt;p&gt;$ bundle exec cap install STAGES=development,production&lt;/p&gt;

&lt;p&gt;Configure your sever address, folder target, public keys and roles
  :application
  :repository
  :deploy_to
  :user&lt;/p&gt;

&lt;p&gt;This will create folders on :deploy_to server&lt;/p&gt;

&lt;p&gt;$ bundle exec cap deploy:setup&lt;/p&gt;

&lt;p&gt;This check your configs&lt;/p&gt;

&lt;p&gt;$ bundle exec cap deploy:check&lt;/p&gt;

&lt;p&gt;if you need more tasks see: deploy.rb&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Example:

after &quot;deploy&quot;, &quot;deploy:symlink_config_files&quot;
after &quot;deploy&quot;, &quot;deploy:restart&quot;
after &quot;deploy&quot;, &quot;deploy:cleanup&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$ bundle exec cap [STAGE] deploy&lt;/p&gt;

&lt;p&gt;Obs: Don`t forget uncomment Capfile:
  *rbenv, *bundler, *bower, *npm or *migrations if you neeed&lt;/p&gt;

&lt;p&gt;More about Capistrano –&amp;gt; https://github.com/capistrano/capistrano&lt;/p&gt;
</summary>
      <id>http://cristianounix.github.io/ruby,%20deploy,%20capistrano/2014/07/22/configuring-capistrano/</id>
      <updated>2014-07-22T00:00:00-03:00</updated>
      <author>
        <name>Cristiano S. Oliveira</name>
      </author>
    </entry>
  
    <entry>
      <title>Install php, ruby, rbenv, mysql, nginx, postgres all this on mac</title>
      <link href="http://cristianounix.github.io/macbook/2014/05/29/Install-Php-Ruby-Rbenv-Nginx-PostGres-MySql/" />
      <summary type="html">&lt;h1 id=&quot;install-homebrew-php-ruby-rbenv-ngix-mysql-postgres&quot;&gt;Install Homebrew, Php, Ruby, Rbenv, Ngix, MySql, PostGres&lt;/h1&gt;

&lt;h3 id=&quot;rbenv&quot;&gt;Rbenv:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
$ git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
$ echo &#39;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bash_profile
$ echo &#39;eval &quot;$(rbenv init -)&quot;&#39; &amp;gt;&amp;gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dont forget run ‘$ rbenv rehash’ if you install any gem not using Gemfile Ex. ‘$ gem install foo’&lt;/p&gt;

&lt;h3 id=&quot;ruby&quot;&gt;Ruby:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ rbenv install [ruby-version]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After you install ruby set your global version&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rbenv global [ruby-version]
$ gem install bundler
$ rbenv rehash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For more options use: ‘$ rbenv’&lt;/p&gt;

&lt;h3 id=&quot;homebrew&quot;&gt;HomeBrew:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ brew ruby -e &quot;$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)&quot;
$ brew doctor
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;php-with-fpm-without-apache-mod-and-with-pgsql&quot;&gt;PHP (with fpm, without apache mod and with pgsql):&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ brew tap josegonzalez/php
$ brew tap homebrew/dupes
$ brew options php54
$ brew install --without-apache --with-fpm --with-mysql --with-pgsql --with-debug php55
$ brew install php55-mcrypt
$ cp /usr/local/Cellar/php55/5.5.12/homebrew.mxcl.php55.plist ~/Library/LaunchAgents/
$ launchctl load -w ~/Library/LaunchAgents/homebrew-php.josegonzalez.php54.plist (Start)
$ launchctl unload -w ~/Library/LaunchAgents/homebrew-php.josegonzalez.php54.plist (Stop)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;postgres&quot;&gt;PostGres&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ brew install postgresql
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;mysql&quot;&gt;Mysql:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ brew install mysql --enable-debug
$ mysql_secure_installation
$ mysql.server {start|stop|restart|reload|force-reload|status}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;workbench&quot;&gt;WorkBench:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ ln -s /usr/local/Cellar/mysql/5.6.10 /usr/local/mysql
$ sudo ln -s /usr/local/Cellar/mysql/5.6.10/my.cnf /etc/my.cnf
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;ngix&quot;&gt;NgiX:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ brew install nginx
$ cp /usr/local/Cellar/nginx/1.4.1/homebrew.mxcl.nginx.plist ~/Library/LaunchAgents/
$ launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist (Start)
$ launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist (Stop)
$ vim /usr/local/etc/nginx/nginx.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Put line “include sites-enabled/*.conf;” on block http{}&lt;/p&gt;

&lt;h2 id=&quot;other&quot;&gt;Other:&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ brew install tmux
$ brew install tig
$ brew isntall htop
$ brew install wget
$ brew install node
$ brew install vim
$ brew install openssl
$ brew install git
$ brew install autoconf
$ gem install tmuxinator &amp;amp;&amp;amp; rbenv rehash
&lt;/code&gt;&lt;/pre&gt;

</summary>
      <id>http://cristianounix.github.io/macbook/2014/05/29/Install-Php-Ruby-Rbenv-Nginx-PostGres-MySql/</id>
      <updated>2014-05-29T00:00:00-03:00</updated>
      <author>
        <name>Cristiano S. Oliveira</name>
      </author>
    </entry>
  
    <entry>
      <title>Create OSX Pen Drive bootable</title>
      <link href="http://cristianounix.github.io/macbook/2014/05/27/Create-OSX-pen-drive-boot/" />
      <summary type="html">&lt;h2 id=&quot;formating-macbook-with-pen-drive-osx&quot;&gt;Formating MacBook with Pen Drive OSX:&lt;/h2&gt;

&lt;p&gt;After you download MacOSX (Mavericks)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo &quot;/Applications/Install OS X Mavericks.app/Contents/Resources/createinstallmedia&quot; --volume /Volumes/[PEN-DRIVE] --applicationpath &quot;/Applications/Install OS X Mavericks.app&quot;
&lt;/code&gt;&lt;/pre&gt;

</summary>
      <id>http://cristianounix.github.io/macbook/2014/05/27/Create-OSX-pen-drive-boot/</id>
      <updated>2014-05-27T00:00:00-03:00</updated>
      <author>
        <name>Cristiano S. Oliveira</name>
      </author>
    </entry>
  
    <entry>
      <title>Repository forked, update.... What you do ¿?</title>
      <link href="http://cristianounix.github.io/macbook/2014/05/18/git-forked-repository-synchronized-with-original/" />
      <summary type="html">&lt;h2 id=&quot;you-forked-repository-on-git-and-now-you-would-like-update-this-repository--what-you-do--delete-this-repo-and-fork-again--cry-pray&quot;&gt;You forked repository on git, and now you would like update this repository ! what you do ¿? delete this repo and fork again ? cry? pray?&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ git remote add upstream [ADDRESS REPO ORIGINAL]
$ git fetch upstream
$ git merge upstream/master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Original post:
  &lt;a href=&quot;http://blog.da2k.com.br/2014/01/19/manter-repositorio-github-forkado-sincronizado-com-o-original/&quot;&gt;Da2K&lt;/a&gt;
Thanks:
  &lt;a href=&quot;https://twitter.com/vitorbritto&quot;&gt;@VitorBritto&lt;/a&gt;&lt;/p&gt;
</summary>
      <id>http://cristianounix.github.io/macbook/2014/05/18/git-forked-repository-synchronized-with-original/</id>
      <updated>2014-05-18T00:00:00-03:00</updated>
      <author>
        <name>Cristiano S. Oliveira</name>
      </author>
    </entry>
  
    <entry>
      <title>Welcome to Hikari for Jekyll!</title>
      <link href="http://cristianounix.github.io/2014/01/28/welcome-to-jekyll/" />
      <summary type="html">&lt;p&gt;Welcome to &lt;em&gt;Hikari&lt;/em&gt;, a responsive, fluid and minimalist Jekyll theme for developers. As a web designer keen on learning how to develop my own stuff, reading developers’ blog has always been the way to learn from the best. So I thought it was time to give back! &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hikari&lt;/em&gt; is an open-source Jekyll theme packed with everything you need to get started and share your best learnings with the community.&lt;/p&gt;

&lt;p&gt;Of course, you don’t need to be a developer to use &lt;em&gt;Hikari&lt;/em&gt;! Although, I wouldn’t recommend it to anyone who’s not willing to dive more than 5 minutes into my (sometimes) messy front-end code!  &lt;/p&gt;

&lt;p&gt;Jekyll and pygments can easily help you to display your best snippets. I slightly styled them, and this is how it looks: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello World!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3em&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Georgia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;700&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;header&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fadeIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;	
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that so far, only HTML, CSS and Javascript are styled out of the box. But everything’s ready for you to start styling your favorites languages: Python, Ruby, PHP and &lt;a href=&quot;http://rubygems.org/gems/pygments.rb&quot;&gt;many more&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. &lt;/p&gt;

&lt;p&gt;More on &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;
</summary>
      <id>http://cristianounix.github.io/2014/01/28/welcome-to-jekyll/</id>
      <updated>2014-01-28T14:57:51-02:00</updated>
      <author>
        <name>Cristiano S. Oliveira</name>
      </author>
    </entry>
  
    <entry>
      <title>Git password no more</title>
      <link href="http://cristianounix.github.io/git/2013/04/20/Git-password-no-more/" />
      <summary type="html">&lt;h2 id=&quot;ridiculous-simple-lets-go&quot;&gt;Ridiculous simple, let´s go:&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -C &quot;your-email@teste.com&quot;
$ cd ~/.ssh
$ ls -al (this will list files id_rsa and id_rsa.pub)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The file id_rsa are your private-key keep it with you soul :)
The file id_rsa.pub are you public-key this file you put on https://github.com/settings/ssh&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pbcopy &amp;lt; ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After clik “Add SSH key” - CMD+V - SAVE
Testing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh -T git@github.com
&lt;/code&gt;&lt;/pre&gt;

</summary>
      <id>http://cristianounix.github.io/git/2013/04/20/Git-password-no-more/</id>
      <updated>2013-04-20T00:00:00-03:00</updated>
      <author>
        <name>Cristiano S. Oliveira</name>
      </author>
    </entry>
  
</feed>
